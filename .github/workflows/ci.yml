name: CI - E-Market MERN API
on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --replSet rs0
          --bind_ip_all
          --health-cmd "mongosh --eval 'db.runCommand({ping: 1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    env:
      NODE_ENV: test
      DB_URI: mongodb://localhost:27017/E_Market_API_Test
      REDIS_URL: redis://localhost:6379
      # Add these critical env vars for your app
      JWT_SECRET: test-secret-key-for-ci
      JWT_EXPIRES_IN: 1d
      BCRYPT_ROUNDS: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      
      - name: Install dependencies
        run: npm ci
      
      # Wait a bit to ensure services are fully ready
      - name: Wait for services
        run: |
          echo "Waiting for MongoDB..."
          timeout 30 bash -c 'until nc -z localhost 27017; do sleep 2; done'
          echo "Waiting for Redis..."
          timeout 30 bash -c 'until nc -z localhost 6379; do sleep 2; done'

      - name: Initiate Mongo replica set
          run: |
            sleep 5
            mongo --eval "rs.initiate({_id:'rs0',members:[{_id:0,host:'localhost:27017'}]})"

      - name: Run tests
        run: npm run test
      
      - name: Run coverage test
        run: npm run coverage
      
      - name: Build Docker image
        run: docker build -t mern-api-image .