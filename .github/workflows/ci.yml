name: CI - E-Market MERN API

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --replSet rs0
          --bind_ip_all
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: password

    env:
      NODE_ENV: test
      DB_URI: mongodb://admin:password@localhost:27017/E_Market_API_Test?replicaSet=rs0&authSource=admin
      JWT_SECRET: your-test-jwt-secret-change-in-production
      JWT_EXPIRE: 30m

    steps:
      # checkout repo
      - name: checkout code
        uses: actions/checkout@v4

      # install Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # install dependencies form package.json cleanly
      - name: Install dependencies
        run: npm ci
      
      # Wait for MongoDB to be ready and init replica set
      - name: Setup MongoDB Replica Set
        run: |
          # Install mongosh
          curl -fsSL https://pgp.mongodb.com/server-7.0.asc | sudo gpg -o /usr/share/keyrings/mongodb-server-7.0.gpg --dearmor
          echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-7.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/7.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-7.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-mongosh
          
          # Wait for MongoDB
          until nc -z localhost 27017; do
            echo "Waiting for MongoDB..."
            sleep 2
          done
          
          # Initialize replica set
          echo "Initializing MongoDB replica set..."
          mongosh "mongodb://admin:password@localhost:27017/admin" --eval "rs.initiate({_id: 'rs0', members: [{_id: 0, host: 'localhost:27017'}]})"
          
          # Wait for replica set to be ready
          until mongosh "mongodb://admin:password@localhost:27017/admin?replicaSet=rs0" --eval "rs.status().ok" --quiet; do
            echo "Waiting for replica set to be ready..."
            sleep 2
          done
          echo "MongoDB replica set is ready!"
      
      # Create test environment file
      - name: Create test environment file
        run: |
          cat > .env.test << EOF
          NODE_ENV=test
          DB_URI=mongodb://admin:password@localhost:27017/E_Market_API_Test?replicaSet=rs0&authSource=admin
          JWT_SECRET=your-test-jwt-secret-change-in-production
          JWT_EXPIRE=30m
          PORT=3000
          EOF
      
      # run all tests
      - name: Run tests
        run: npm run test

      # run coverage test
      - name: Run coverage test
        run: npm run coverage
      
      # Verify the Dockerfile builds successfully
      - name: Build Docker image
        run: docker build -t mern-api-image .