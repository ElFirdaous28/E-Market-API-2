name: CI - E-Market MERN API

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ping: 1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      NODE_ENV: test
      DB_URI: mongodb://localhost:27017/E_Market_API_Test?directConnection=true
      REDIS_URL: redis://localhost:6379
      JWT_SECRET: test-secret-key-for-ci
      JWT_EXPIRES_IN: 1d
      BCRYPT_ROUNDS: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Start MongoDB as replica set
        run: |
          # Stop the service container MongoDB
          docker stop $(docker ps -q --filter ancestor=mongo:7.0) || true
          
          # Start MongoDB with replica set
          docker run -d --name mongodb-rs \
            -p 27017:27017 \
            mongo:7.0 \
            --replSet rs0 \
            --bind_ip_all
          
          # Wait for MongoDB to start
          echo "Waiting for MongoDB to start..."
          timeout 30 bash -c 'until docker exec mongodb-rs mongosh --eval "db.runCommand({ping: 1})" > /dev/null 2>&1; do sleep 2; done'
          echo "✅ MongoDB is running!"
          
          # Initialize replica set
          echo "Initializing replica set..."
          docker exec mongodb-rs mongosh --eval '
            rs.initiate({
              _id: "rs0",
              members: [{ _id: 0, host: "localhost:27017" }]
            });
          '
          
          # Wait for replica set to be ready
          echo "Waiting for replica set..."
          sleep 5
          docker exec mongodb-rs mongosh --eval 'rs.status()'
          echo "✅ Replica set initialized!"

      - name: Wait for Redis
        run: |
          echo "Waiting for Redis..."
          timeout 30 bash -c 'until nc -z localhost 6379; do sleep 2; done'
          echo "✅ Redis is ready!"

      - name: Update DB_URI for replica set
        run: echo "DB_URI=mongodb://localhost:27017/E_Market_API_Test?replicaSet=rs0" >> $GITHUB_ENV

      - name: Run tests
        run: npm run test

      - name: Run coverage test
        run: npm run coverage

      - name: Build Docker image
        run: docker build -t mern-api-image .

      - name: Cleanup
        if: always()
        run: docker stop mongodb-rs && docker rm mongodb-rs || true